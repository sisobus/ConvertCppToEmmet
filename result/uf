\		'ps:uf': "namespace UnionFind{\n"
\			."\tvector<int> rank;\n"
\			."\tvector<int> u;\n"
\			."\tvoid Init(int size) {\n"
\			."\t\trank.resize(size+1,0);\n"
\			."\t\tu.resize(size+1,0);\n"
\			."\t\tfor ( int i = 0 ; i <= size ; i++ )\n"
\			."\t\t\tu[i] = i;\n"
\			."\t}\n"
\			."\tint Find(int now) {\n"
\			."\t\treturn (u[now]==now)?now:(u[now]=Find(u[now]));\n"
\			."\t}\n"
\			."\tvoid MakeUnion(int x,int y) {\n"
\			."\t\tx = Find(x); y = Find(y);\n"
\			."\t\tif ( x == y ) return;\n"
\			."\t\tif ( rank[x] < rank[y] ) u[x] = y;\n"
\			."\t\telse {\n"
\			."\t\t\tu[y] = x;\n"
\			."\t\t\trank[x]+=(rank[x]==rank[y]);\n"
\			."\t\t}\n"
\			."\t}\n"
\			."}\n",
