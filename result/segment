\		'ps:segment': "namespace SegmentTree {\n"
\			."\ttypedef pair<int,int> ii;\n"
\			."\tint a[1111111];\n"
\			."\tint mntree[4444444];\n"
\			."\tint mxtree[4444444];\n"
\			."\tvoid initialize(int node,int s,int e) {\n"
\			."\t\tif ( s == e ) mntree[node] = mxtree[node] = a[s];\n"
\			."\t\telse {\n"
\			."\t\t\tint mid = (s+e)>>1;\n"
\			."\t\t\tinitialize(2*node,s,mid);\n"
\			."\t\t\tinitialize(2*node+1,mid+1,e);\n"
\			."\t\t\tmxtree[node] = max(mxtree[2*node],mxtree[2*node+1]);\n"
\			."\t\t\tmntree[node] = min(mntree[2*node],mntree[2*node+1]);\n"
\			."\t\t}\n"
\			."\t}\n"
\			."\tii query(int node,int s,int e,int i,int j) {\n"
\			."\t\tif ( e < i || s > j ) return ii(-1,-1);\n"
\			."\t\tif ( s >= i && e <= j ) return ii(mxtree[node],mntree[node]);\n"
\			."\t\tint mid = (s+e)>>1;\n"
\			."\t\tii p1 = query(2*node,s,mid,i,j);\n"
\			."\t\tii p2 = query(2*node+1,mid+1,e,i,j);\n"
\			."\t\tif ( p1 == ii(-1,-1) ) return p2;\n"
\			."\t\tif ( p2 == ii(-1,-1) ) return p1;\n"
\			."\t\treturn ii(max(max(0,p1.first),max(0,p2.first)),min(max(0,p1.second),max(0,p2.second)));\n"
\			."\t}\n"
\			."\tii update(int node,int s,int e,int idx,int val) {\n"
\			."\t\tif ( e < idx || idx < s ) return ii(mxtree[node],mntree[node]);\n"
\			."\t\tif ( s == e ) return ii(mxtree[node]=val,mntree[node]=val);\n"
\			."\t\tint mid = (s+e)>>1;\n"
\			."\t\tii p1 = update(2*node,s,mid,idx,val);\n"
\			."\t\tii p2 = update(2*node+1,mid+1,e,idx,val);\n"
\			."\t\treturn ii(mxtree[node]=max(max(0,p1.first),max(0,p2.first)),\n"
\			."\t\t\t\tmntree[node]=min(max(0,p1.second),max(0,p2.second)));\n"
\			."\t}\n"
\			."}\n",
